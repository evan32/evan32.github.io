# Chunk 2
usa_zips <- zctas(cb = T, progress_bar = F)
oakland_data <- readRDS("oakland_data.rds")
alameda_data <- readRDS("alameda_data.rds")
# Chunk 3
#checkboxGroupInput(
#  inputId = "target_income",
#  label = "income:",
#  choices = c("Less than $10,000", "$10,000 to $14,999", "$15,000 to $19,999", "$20,000 #to $24,999", "$25,000 to $29,999", "$30,000 to $34,999", "$35,000 to $39,999", "$40,000 #to $44,999", "$45,000 to $49,999", "$50,000 to $59,999", "$60,000 to $74,999", "$75,000 #to $99,999", "$100,000 to $124,999", "$125,000 to $149,999", "$150,000 to $199,999", #"$200,000 or more"),
#  selected = "Less than $10,000"
#)
selectInput(
inputId = "target_race",
label = "race:",
choices = c("Native Hawaiian and Other Pacific Islander Alone", "American Indian and Alaska Native Alone", "Black or African American", "Asian Alone", "White Alone", "Some Other Race Alone", "Two or More Races"),
selected = "Native Hawaiian and Other Pacific Islander Alone"
)
# Chunk 4
leafletOutput("map")
# Chunk 5
observeEvent({
#input$target_income
input$target_race
},  {
oakland_target_race_by_zip <- oakland_data %>%
select(Zip_Number, estimate, race) %>%
group_by(Zip_Number, race) %>%
mutate(Zip_Number = as.numeric(Zip_Number)) %>%
summarize(estimate = sum(estimate)) %>%
filter(race == target_race) %>%
select(-race)
# oakland_target_race_by_zip_sf <- oakland_target_race_by_zip %>%
#   left_join(
#     usa_zips %>%
#       transmute(GEOID10 = as.numeric(GEOID10)),
#     by = c("Zip_Number" = "GEOID10")
#     ) %>%
#   st_as_sf()
#
# race_pal <- colorNumeric(
#   palette = "Reds",
#   domain = oakland_target_race_by_zip_sf$oakland_target_race_by_zip
#   )
#
# output$map <- renderLeaflet({
#   leaflet() %>%
#   addProviderTiles(providers$CartoDB.Positron) %>%
#   addPolygons(
#     data = oakland_target_race_by_zip_sf,
#     fillColor = ~race_pal(oakland_target_race_by_zip$estimate),
#     color = "white",
#     weight = 0.5,
#     fillOpacity = 0.5,
#     label = ~oakland_target_race_by_zip$estimate
#     ) %>%
#   addLegend(
#     data = oakland_target_race_by_zip_sf,
#     pal = race_pal,
#     values = ~oakland_target_race_by_zip$estimate,
#     title = "Breakdown of population in Oakland"
#     )
#})
})
gc()
# Chunk 1: global
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(leaflet)
library(tidycensus)
library(StatMatch)
library(geojsonsf)
library(geojson)
library(plotly)
library(httr)
library(flexdashboard)
library(shiny)
# Chunk 2
usa_zips <- zctas(cb = T, progress_bar = F)
oakland_data <- readRDS("oakland_data.rds")
alameda_data <- readRDS("alameda_data.rds")
# Chunk 3
#checkboxGroupInput(
#  inputId = "target_income",
#  label = "income:",
#  choices = c("Less than $10,000", "$10,000 to $14,999", "$15,000 to $19,999", "$20,000 #to $24,999", "$25,000 to $29,999", "$30,000 to $34,999", "$35,000 to $39,999", "$40,000 #to $44,999", "$45,000 to $49,999", "$50,000 to $59,999", "$60,000 to $74,999", "$75,000 #to $99,999", "$100,000 to $124,999", "$125,000 to $149,999", "$150,000 to $199,999", #"$200,000 or more"),
#  selected = "Less than $10,000"
#)
selectInput(
inputId = "target_race",
label = "race:",
choices = c("Native Hawaiian and Other Pacific Islander Alone", "American Indian and Alaska Native Alone", "Black or African American", "Asian Alone", "White Alone", "Some Other Race Alone", "Two or More Races"),
selected = "Native Hawaiian and Other Pacific Islander Alone"
)
# Chunk 4
leafletOutput("map")
# Chunk 5
observeEvent({
#input$target_income
input$target_race
},  {
oakland_target_race_by_zip <- oakland_data %>%
select(Zip_Number, estimate, race) %>%
group_by(Zip_Number, race) %>%
mutate(Zip_Number = as.numeric(Zip_Number)) %>%
summarize(estimate = sum(estimate)) %>%
filter(race == target_race) %>%
select(-race)
# oakland_target_race_by_zip_sf <- oakland_target_race_by_zip %>%
#   left_join(
#     usa_zips %>%
#       transmute(GEOID10 = as.numeric(GEOID10)),
#     by = c("Zip_Number" = "GEOID10")
#     ) %>%
#   st_as_sf()
#
# race_pal <- colorNumeric(
#   palette = "Reds",
#   domain = oakland_target_race_by_zip_sf$oakland_target_race_by_zip
#   )
#
# output$map <- renderLeaflet({
#   leaflet() %>%
#   addProviderTiles(providers$CartoDB.Positron) %>%
#   addPolygons(
#     data = oakland_target_race_by_zip_sf,
#     fillColor = ~race_pal(oakland_target_race_by_zip$estimate),
#     color = "white",
#     weight = 0.5,
#     fillOpacity = 0.5,
#     label = ~oakland_target_race_by_zip$estimate
#     ) %>%
#   addLegend(
#     data = oakland_target_race_by_zip_sf,
#     pal = race_pal,
#     values = ~oakland_target_race_by_zip$estimate,
#     title = "Breakdown of population in Oakland"
#     )
#})
})
observeEvent({
#input$target_income
input$target_race
},  {
oakland_target_race_by_zip <- oakland_data %>%
select(Zip_Number, estimate, race)
#%>%
#   group_by(Zip_Number, race) %>%
#   mutate(Zip_Number = as.numeric(Zip_Number)) %>%
#   summarize(estimate = sum(estimate)) %>%
#  filter(race == target_race) %>%
#    select(-race)
# oakland_target_race_by_zip_sf <- oakland_target_race_by_zip %>%
#   left_join(
#     usa_zips %>%
#       transmute(GEOID10 = as.numeric(GEOID10)),
#     by = c("Zip_Number" = "GEOID10")
#     ) %>%
#   st_as_sf()
#
# race_pal <- colorNumeric(
#   palette = "Reds",
#   domain = oakland_target_race_by_zip_sf$oakland_target_race_by_zip
#   )
#
# output$map <- renderLeaflet({
#   leaflet() %>%
#   addProviderTiles(providers$CartoDB.Positron) %>%
#   addPolygons(
#     data = oakland_target_race_by_zip_sf,
#     fillColor = ~race_pal(oakland_target_race_by_zip$estimate),
#     color = "white",
#     weight = 0.5,
#     fillOpacity = 0.5,
#     label = ~oakland_target_race_by_zip$estimate
#     ) %>%
#   addLegend(
#     data = oakland_target_race_by_zip_sf,
#     pal = race_pal,
#     values = ~oakland_target_race_by_zip$estimate,
#     title = "Breakdown of population in Oakland"
#     )
#})
})
usa_zips <-
zctas(cb = T, progress_bar = F)
## Map area of interest: Oakland City in Alameda County
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
ca_cities <- places("CA", cb = T, progress_bar = FALSE)
bay_cities <- ca_cities[bay_counties, ]
alameda_county <- filter(bay_counties, NAME=="Alameda")
oakland_city <- filter(bay_cities, NAME=="Oakland")
oakland_zips <-
usa_zips %>%
st_centroid() %>%
.[oakland_city, ] %>%
st_drop_geometry() %>%
left_join(usa_zips %>% select(GEOID10)) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(
data = alameda_county
) %>%
addPolygons(
data = oakland_zips,
color = "red"
)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(leaflet)
library(tidycensus)
library(StatMatch)
library(geojsonsf)
library(geojson)
library(plotly)
library(httr)
usa_zips <-
zctas(cb = T, progress_bar = F)
## Map area of interest: Oakland City in Alameda County
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
ca_cities <- places("CA", cb = T, progress_bar = FALSE)
bay_cities <- ca_cities[bay_counties, ]
alameda_county <- filter(bay_counties, NAME=="Alameda")
oakland_city <- filter(bay_cities, NAME=="Oakland")
oakland_zips <-
usa_zips %>%
st_centroid() %>%
.[oakland_city, ] %>%
st_drop_geometry() %>%
left_join(usa_zips %>% select(GEOID10)) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(
data = alameda_county
) %>%
addPolygons(
data = oakland_zips,
color = "red"
)
request1 <- GET("https://opendata.arcgis.com/datasets/5d6bf4760af64db48b6d053e7569a47b_0.geojson")
response1 <- content(request1, as = "text", encoding = "UTF-8")
covid_data1 <- as.geojson(response1)
covid_case_data_sf <- geojson_sf(covid_data1)
request2 <- GET("https://opendata.arcgis.com/datasets/5d6bf4760af64db48b6d053e7569a47b_4.geojson")
response2 <- content(request2, as = "text", encoding = "UTF-8")
covid_data2 <- as.geojson(response2)
covid_test_data_sf <- geojson_sf(covid_data2)
# Merge requests
test_rate_tbl <- covid_test_data_sf %>%
dplyr::select(Zip_Number, TestRates) %>%
st_drop_geometry()
full_covid_data_al <- full_join(covid_case_data_sf, test_rate_tbl, by = "Zip_Number")
covidData_oakland <- full_covid_data_al %>%
filter(Zip_Number %in% oakland_zips$ZCTA5CE10) %>%
select(c("geometry", "Zip_Number", "CaseRates", "TestRates")) %>%
mutate(CaseRates = round(CaseRates),
TestRates = round(TestRates))
covidData_oakland_drop_geo <- st_drop_geometry(covidData_oakland)
#remove extra info from alameda covid data
full_covid_data_al <- full_covid_data_al %>% select(c("geometry", "Zip_Number", "CaseRates", "TestRates")) %>%
mutate(CaseRates = round(CaseRates),
TestRates = round(TestRates))
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
acs_vars_2019_5yr <-
listCensusMetadata(
name = "2019/acs/acs5",
type = "variables"
)
census_race_categories <-
c(
"White Alone",
"Black or African American",
"American Indian and Alaska Native Alone",
"Asian Alone",
"Native Hawaiian and Other Pacific Islander Alone",
"Some Other Race Alone",
"Two or More Races"
)
california_income_race <-
1:7 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "zip code tabulation area:*",
regionin = "state:06",
vars = paste0("group(B19001",LETTERS[x],")")
) %>%
select(zip_code_tabulation_area, !c(GEO_ID,state,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"income"),
sep = "!!"
) %>%
filter(!is.na(income)) %>%
mutate(race = census_race_categories[x])
})
#get alameda zipcodes only
alameda_income_race <- california_income_race %>%
filter(zip_code_tabulation_area %in% full_covid_data_al$Zip_Number)
colnames(alameda_income_race)[1] <- "Zip_Number"
#get oakland zipcodes only
oakland_income_race <- california_income_race %>%
filter(zip_code_tabulation_area %in% covidData_oakland$Zip_Number)
colnames(oakland_income_race)[1] <- "Zip_Number"
alameda_data <- merge(x = alameda_income_race, y = full_covid_data_al, by = c("Zip_Number"))
oakland_data <- merge(x = oakland_income_race, y = full_covid_data_al, by = c("Zip_Number"))
library(BAMMtools)
k <- unique(round(getJenksBreaks(covidData_oakland_drop_geo[,2], 6), digits = -3))
pal7 <- colorBin("Reds", domain = k, bins = k, reverse = FALSE)
pal77 <- colorBin("Reds", domain = k, bins = k, reverse = TRUE)
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(data = covidData_oakland, stroke = TRUE, color = "black", weight = 1, fillOpacity = 0) %>%
addPolygons(data = covidData_oakland, stroke = TRUE, color = "black", weight = 1, smoothFactor = 0.3,
fillOpacity = .7,
fillColor = ~pal7(covidData_oakland_drop_geo[,3]),
highlight = highlightOptions(weight = 5, fillOpacity = 1.0, bringToFront =TRUE),
label = paste("Test Rates", covidData_oakland_drop_geo[,3], sep = ": ")) %>%
addLegend(data = covidData_oakland_drop_geo, title = "Test Rates", pal = pal77,
values = covidData_oakland_drop_geo[,3], bins = 5, opacity = 1.0, na.label = "No Data",
labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE)))
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(data = covidData_oakland, stroke = TRUE, color = "black", weight = 1, fillOpacity = 0) %>%
addPolygons(data = covidData_oakland, stroke = TRUE, color = "black", weight = 1, smoothFactor = 0.3,
fillOpacity = .7,
fillColor = ~pal7(covidData_oakland_drop_geo[,2]),
highlight = highlightOptions(weight = 5, fillOpacity = 1.0, bringToFront =TRUE),
label = paste("Case Rates", covidData_oakland_drop_geo[,2], sep = ": ")) %>%
addLegend(data = covidData_oakland_drop_geo, title = "Case Rates", pal =  pal77,
values = covidData_oakland_drop_geo[,2], bins = 5, opacity = 1.0, na.label = "No Data",
labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE)))
oakland_race_total <-
oakland_income_race %>%
group_by(race) %>%
summarize(estimate = sum(estimate)) %>%
mutate(income = "Total")
oakland_income_total <-
oakland_income_race %>%
group_by(income) %>%
summarize(estimate = sum(estimate)) %>%
mutate(income = "Total")
oakland_income_race %>%
group_by(income, race) %>%
summarize(estimate = sum(estimate)) %>%
rbind(oakland_race_total) %>%
ggplot() +
geom_bar(
aes(
x = income %>% factor(levels = rev(c("Total",unique(oakland_income_race$income)))),
y = estimate,
fill = race %>% factor(levels = rev(unique(oakland_income_race$race)))
),
stat = "identity",
position = "fill"
) +
labs(
x = "Household income",
y = "Proportion of households",
title = "Oakland household income by race",
fill = "Race of householder"
) +
coord_flip() +
theme(
legend.position = "bottom",
legend.direction = "vertical"
)  +
guides(
fill = guide_legend(
reverse = T
)
)
oakland_target_race_by_zip <- oakland_data %>%
select(Zip_Number, estimate, race) %>%
group_by(Zip_Number, race) %>%
mutate(Zip_Number = as.numeric(Zip_Number)) %>%
summarize(estimate = sum(estimate)) %>%
filter(race == "Black or African American") %>%
select(-race)
oakland_target_race_by_zip_sf <- oakland_target_race_by_zip %>%
left_join(
usa_zips %>%
transmute(GEOID10 = as.numeric(GEOID10)),
by = c("Zip_Number" = "GEOID10")
) %>%
st_as_sf()
race_pal <- colorNumeric(
palette = "Reds",
domain = oakland_target_race_by_zip_sf$oakland_target_race_by_zip
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = oakland_target_race_by_zip_sf,
fillColor = ~race_pal(oakland_target_race_by_zip$estimate),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~oakland_target_race_by_zip$estimate
) %>%
addLegend(
data = oakland_target_race_by_zip_sf,
pal = race_pal,
values = ~oakland_target_race_by_zip$estimate,
title = "Breakdown of population in Oakland"
)
#NOTE: ignore estimates if not for income or race group
alameda_grouping_by_zip1 <-
alameda_data %>%
#select(-income) %>%
group_by(Zip_Number, TestRates, CaseRates) %>%
summarize(estimate = sum(estimate))
covid_data_plot1 <- ggplot(
data = alameda_grouping_by_zip1,
aes(
x = TestRates,
y = CaseRates
)
) +
geom_point() +
geom_smooth(method = "lm")
covid_data_plot1 %>% ggplotly()
model <- lm(CaseRates ~ TestRates, alameda_grouping_by_zip1)
summary(model)
alameda_grouping_by_zip1 <-
alameda_data %>%
group_by(Zip_Number, TestRates, CaseRates) %>%
summarize(estimate = sum(estimate))  %>%
filter(!(Zip_Number %in% c(94720,95377, 94621,94603,94613)))
covid_data_plot1 <- ggplot(
data = alameda_grouping_by_zip1,
aes(
x = TestRates,
y = CaseRates
)
) +
geom_point() +
geom_smooth(method = "lm")
covid_data_plot1 %>% ggplotly()
model <- lm(CaseRates ~ TestRates, alameda_grouping_by_zip1)
summary(model)
alameda_grouping_by_zip2 <-
alameda_data %>%
group_by(Zip_Number, income, CaseRates) %>%
summarize(estimate = sum(estimate))  %>%
filter(income == "$10,000 to $14,999") %>%
filter(!(Zip_Number %in% c(94720,95377, 94621,94603,94613)))
covid_data_plot2 <- ggplot(
data = alameda_grouping_by_zip2,
aes(
x = CaseRates,
y = estimate
)
) +
geom_point() +
geom_smooth(method = "lm") +
labs(
x = "CaseRates",
y = "People with annual household income $10,000 to $14,999",
title = paste0(" Alameda County Linear Regression of Case Rates and <br> People with annual household income $10,000 to $14,999")
)
covid_data_plot2 %>% ggplotly()
model <- lm(estimate ~ CaseRates, alameda_grouping_by_zip2)
summary(model)
setwd("~/GitHub/evan32.github.io")
